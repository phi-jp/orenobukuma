// # item
item
  div.z-depth-2.item
    div.row
      div.col.s12.m4.side
        div.image
          a(href='{url}', target='_blank')
            // img(src='http://s.wordpress.com/mshots/v1/{url}?w=320')
            img(src='http://capture.heartrails.com/320x240/delay=2?{url}')

      div.col.s12.m8.content
        div.main
          a.title(href='{url}', target='_blank') {title}
          div(if='{!editing}')
            div.markdown(name='_markdown')
          div(if='{editing}')
            textarea.materialize-textarea(name='_description') {note}
            div tags
        div.action.right-align
          div(if='{!editing}')
            i.material-icons(onclick='{this.edit}') edit
            i.material-icons(onclick='{this.edit}') more_vert
          div(if='{editing}')
            i.material-icons(onclick='{this.save}') save
            i.material-icons(onclick='{this.del}') block


  style(scoped, type='less').

    .item {
      background-color: white;

      .side {
        height: auto;
        .image {
          border-right: 1px solid rgba(0, 0, 0, 0.1);
          border-bottom: 1px solid rgba(0, 0, 0, 0.1);
          img {
            width: 100%;
          }
        }
      }

      .content {
        position: relative;
        .main {
          padding: 0.5rem;
          .title {
            color: hsl(200, 100%, 60%);
            font-size: 1.2rem;
          }

          .markdown {
            line-height: 1.2;
            ul {
              padding-left: 1.5rem;
              li {
                list-style-type: circle;
              }
            }
          }
          textarea {
            line-height: 1.2;
          }
        }
        .action {
          cursor: pointer;
          position: absolute;
          right: 16px;
          top: 6px;
          opacity: 0;
          transition: 256ms;
        }
      }

      &:hover {
        .action {
          opacity: 1;
        }
      }
    }
  script.
    this.editing = false;

    this.edit = function() {
      this.editing = true;
      setTimeout(function() {
        this._description.select();
        this._description.value = this._description.value;
        //- this._description.focus();
      }.bind(this));
    };
    this.save = function() {
      var linkRef = ref.child('users').child(authData.uid).child('links').child(this.id);

      linkRef.update({
        note: this._description.value,
      });

      this.editing = false;
    };
    this.del = function() {
      if (!confirm('real.y?')) return ; 

      db.users.links.del(window.authData.uid, this.id);
    };

    this.on('update', function() {
      if (this.note) {
        this._markdown.innerHTML = marked(this.note);
      }
    });
